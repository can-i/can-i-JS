import { BaseController } from './../Controller';
export declare function Get(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Post(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Put(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Use(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Checkout(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Copy(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Delete(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Head(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Lock(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Merge(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function MkActivity(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function MkCol(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Move(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function MSearch(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Notify(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Options(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Patch(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Report(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Search(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Subscribe(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Trace(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function Unlock(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
export declare function unsubscribe(route?: string): (target: BaseController, key: string, d: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;
